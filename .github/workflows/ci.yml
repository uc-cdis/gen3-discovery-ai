on:
  push:
  pull_request:
    types: [opened, reopened]

name: CI (Security Scans, Unit Test, Lint, Image Build and Push)

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  Security:
    name: Security Pipeline
    uses: uc-cdis/.github/.github/workflows/securitypipeline.yaml@master
    with:
       python-poetry: 'false'
    secrets: inherit

  UnitTest:
    name: Python Unit Test with Postgres
    uses: uc-cdis/.github/.github/workflows/python_unit_test.yaml@master
    with:
       test-script: 'tests/ci_commands_script.sh'
       python-version: '3.9'

  # this creates linter settings in a `.github/linters` folder
  LintConfig:
    name: Python Lint
    uses: uc-cdis/.github/.github/workflows/lint-create-config.yaml@feat/lint

  CustomizeLintConfig:
    runs-on: ubuntu-latest
    name: Customize Lint Config
    steps:
      # modify default isort to specify the module name for proper formatting
      - run: echo "known_first_party=gen3discoveryai" >> .github/linters/.isort.cfg

  Lint:
    name: Python Lint
    uses: uc-cdis/.github/.github/workflows/lint.yaml@feat/lint

  ImageBuildAndPush:
    name: Build Image and Push
    uses: uc-cdis/.github/.github/workflows/image_build_push.yaml@master
    secrets:
      ECR_AWS_ACCESS_KEY_ID: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
      ECR_AWS_SECRET_ACCESS_KEY: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
      QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
      QUAY_ROBOT_TOKEN: ${{ secrets.QUAY_ROBOT_TOKEN }}
